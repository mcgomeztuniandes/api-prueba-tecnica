{
	"info": {
		"_postman_id": "8bd5ccce-59c2-497d-b33e-0608be7c3bbb",
		"name": "supermarket-tecnica - cities - supermarkets",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4501071",
		"_collection_link": "https://planetary-rocket-241071.postman.co/workspace/Proyecto-final~f4920eb3-149c-47c0-bb99-700eff821650/collection/4501071-8bd5ccce-59c2-497d-b33e-0608be7c3bbb?action=share&source=collection_link&creator=4501071"
	},
	"item": [
		{
			"name": "Crear una ciudad válida.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"cityId\", data.id);",
							"pm.collectionVariables.set(\"cityId\", data.id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Esmeraldas\",\n    \"country\": \"Ecuador\",\n    \"population\": 155487\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{apiUrl}}/api/v1/cities",
					"host": [
						"{{apiUrl}}"
					],
					"path": [
						"api",
						"v1",
						"cities"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear un supermercado válido.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"supermarketId\", data.id);",
							"pm.collectionVariables.set(\"supermarketId\", data.id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Tiendas D1.\",\n    \"longitude\": 140,\n    \"latitude\": 100,\n    \"website\": \"https://d1.com.co/\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{apiUrl}}/api/v1/supermarkets",
					"host": [
						"{{apiUrl}}"
					],
					"path": [
						"api",
						"v1",
						"supermarkets"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear un supermercado válido. 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"supermarketId_no_asociado\", data.id);",
							"pm.collectionVariables.set(\"supermarketId_no_asociado\", data.id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Tiendas Jumbo\",\n    \"longitude\": 140,\n    \"latitude\": 100,\n    \"website\": \"https://Jumbo.com.co/\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{apiUrl}}/api/v1/supermarkets",
					"host": [
						"{{apiUrl}}"
					],
					"path": [
						"api",
						"v1",
						"supermarkets"
					]
				}
			},
			"response": []
		},
		{
			"name": "Asociar un nuevo supermercado a una ciudad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{apiUrl}}/api/v1/cities/{{cityId}}/supermarkets/{{supermarketId}}",
					"host": [
						"{{apiUrl}}"
					],
					"path": [
						"api",
						"v1",
						"cities",
						"{{cityId}}",
						"supermarkets",
						"{{supermarketId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Asociar un supermercado que no existe a una ciudad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"Supermarket does not exist for the sent id\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{apiUrl}}/api/v1/cities/{{cityId}}/supermarkets/b5838973-7a82-4ddd-8720-b59111111111",
					"host": [
						"{{apiUrl}}"
					],
					"path": [
						"api",
						"v1",
						"cities",
						"{{cityId}}",
						"supermarkets",
						"b5838973-7a82-4ddd-8720-b59111111111"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener todos los supermercados que pertenecen a una ciudad.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Number of museums > ' + 0, function () {",
							"   var data = pm.response.json()",
							"   pm.expect(data.length).to.greaterThan(0)",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{apiUrl}}/api/v1/cities/{{cityId}}/supermarkets",
					"host": [
						"{{apiUrl}}"
					],
					"path": [
						"api",
						"v1",
						"cities",
						"{{cityId}}",
						"supermarkets"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener un supermercado asociado a una ciudad.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{apiUrl}}/api/v1/cities/{{cityId}}/supermarkets/{{supermarketId}}",
					"host": [
						"{{apiUrl}}"
					],
					"path": [
						"api",
						"v1",
						"cities",
						"{{cityId}}",
						"supermarkets",
						"{{supermarketId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener un supermercado que no está asociado a una ciudad.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {",
							"   pm.response.to.have.status(412);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"The city with the given id is not associated to the supermarket\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{apiUrl}}/api/v1/cities/{{cityId}}/supermarkets/{{supermarketId_no_asociado}}",
					"host": [
						"{{apiUrl}}"
					],
					"path": [
						"api",
						"v1",
						"cities",
						"{{cityId}}",
						"supermarkets",
						"{{supermarketId_no_asociado}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar los supermercados que están asociados a una ciudad.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"id\": \"{{supermarketId}}\",\n        \"name\": \"Tiendas D1 S.A\",\n        \"longitude\": 121222,\n        \"latitude\": 121212,\n        \"website\": \"https://d1.com.co/\"\n    }\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{apiUrl}}/api/v1/cities/{{cityId}}/supermarkets",
					"host": [
						"{{apiUrl}}"
					],
					"path": [
						"api",
						"v1",
						"cities",
						"{{cityId}}",
						"supermarkets"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar los supermercados asociados a una ciudad, con un supermercado inexistente.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"Supermarket does not exist for the sent id\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"id\": \"b5838973-7a82-4ddd-8720-b59111111111\",\n        \"name\": \"Tiendas D1 S.A\",\n        \"longitude\": 121222,\n        \"latitude\": 121212,\n        \"website\": \"https://d1.com.co/\"\n    }\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{apiUrl}}/api/v1/cities/{{cityId}}/supermarkets",
					"host": [
						"{{apiUrl}}"
					],
					"path": [
						"api",
						"v1",
						"cities",
						"{{cityId}}",
						"supermarkets"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar un supermercado asociado a una ciudad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"   pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{apiUrl}}/api/v1/cities/{{cityId}}/supermarkets/{{supermarketId}}",
					"host": [
						"{{apiUrl}}"
					],
					"path": [
						"api",
						"v1",
						"cities",
						"{{cityId}}",
						"supermarkets",
						"{{supermarketId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar un supermercado que no estaba previamente asociado a una ciudad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {",
							"   pm.response.to.have.status(412);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"The city with the given id is not associated to the supermarket\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{apiUrl}}/api/v1/cities/{{cityId}}/supermarkets/{{supermarketId_no_asociado}}",
					"host": [
						"{{apiUrl}}"
					],
					"path": [
						"api",
						"v1",
						"cities",
						"{{cityId}}",
						"supermarkets",
						"{{supermarketId_no_asociado}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "apiUrl",
			"value": "localhost:3000",
			"type": "string"
		},
		{
			"key": "cityId",
			"value": "",
			"type": "string"
		},
		{
			"key": "supermarketId",
			"value": "",
			"type": "string"
		},
		{
			"key": "supermarketId_no_asociado",
			"value": "",
			"type": "string"
		}
	]
}